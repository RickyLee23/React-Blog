{"ast":null,"code":"import{getAuthToken}from\"./utils\";var BASE_URL=\"https://student-json-api.lidemy.me\";export var getPosts=function getPosts(page,itemPerPage){var start=page*itemPerPage-itemPerPage;var end=page*itemPerPage;return fetch(\"\".concat(BASE_URL,\"/posts?_sort=createdAt&_order=desc&_start=\").concat(start,\"&_end=\").concat(end));};export var getPost=function getPost(id){return fetch(\"\".concat(BASE_URL,\"/posts/\").concat(id)).then(function(res){return res.json();});};export var login=function login(username,password){return fetch(\"\".concat(BASE_URL,\"/login\"),{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify({username:username,password:password})}).then(function(res){return res.json();});};export var getMe=function getMe(){var token=getAuthToken();return fetch(\"\".concat(BASE_URL,\"/me\"),{headers:{authorization:\"Bearer \".concat(token)}}).then(function(res){return res.json();});};export var newPost=function newPost(title,body){var token=getAuthToken();return fetch(\"\".concat(BASE_URL,\"/posts\"),{method:\"POST\",headers:{authorization:\"Bearer \".concat(token),\"content-type\":\"application/json\"},body:JSON.stringify({body:body,title:title})}).then(function(res){return res.json();});};export var register=function register(nickname,username,password){return fetch(\"\".concat(BASE_URL,\"/register\"),{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify({nickname:nickname,username:username,password:password})}).then(function(res){return res.json();});};","map":{"version":3,"sources":["/Users/lihongshen/Downloads/2022 用面試資料/React-Blog/src/WebAPI.js"],"names":["getAuthToken","BASE_URL","getPosts","page","itemPerPage","start","end","fetch","getPost","id","then","res","json","login","username","password","method","headers","body","JSON","stringify","getMe","token","authorization","newPost","title","register","nickname"],"mappings":"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","sourcesContent":["import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page, itemPerPage) => {\n  let start = page * itemPerPage - itemPerPage;\n  let end = page * itemPerPage;\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      body,\n      title,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n"]},"metadata":{},"sourceType":"module"}