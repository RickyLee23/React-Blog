{"ast":null,"code":"import { getAuthToken } from \"./utils\";\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nconst sendAPI = func => {\n  return fetch(`${BASE_URL}/${func}`);\n};\n\nexport const getPosts = (page, itemPerPage) => {\n  let start = page * itemPerPage - itemPerPage;\n  let end = page * itemPerPage; // return fetch(\n  //   `${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`\n  // );\n\n  return sendAPI(`/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`);\n};\nexport const getPost = id => {\n  return fetch(`${BASE_URL}/posts/${id}`).then(res => res.json());\n};\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res => res.json());\n};\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json());\n};\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      body,\n      title\n    })\n  }).then(res => res.json());\n};\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};","map":{"version":3,"sources":["/Users/lihongshen/Downloads/2022 用面試資料/React-Blog/src/WebAPI.js"],"names":["getAuthToken","BASE_URL","sendAPI","func","fetch","getPosts","page","itemPerPage","start","end","getPost","id","then","res","json","login","username","password","method","headers","body","JSON","stringify","getMe","token","authorization","newPost","title","register","nickname"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,MAAMC,QAAQ,GAAG,oCAAjB;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAOC,KAAK,CAAE,GAAEH,QAAS,IAAGE,IAAK,EAArB,CAAZ;AACD,CAFD;;AAIA,OAAO,MAAME,QAAQ,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAC7C,MAAIC,KAAK,GAAGF,IAAI,GAAGC,WAAP,GAAqBA,WAAjC;AACA,MAAIE,GAAG,GAAGH,IAAI,GAAGC,WAAjB,CAF6C,CAG7C;AACA;AACA;;AACA,SAAOL,OAAO,CAAE,6CAA4CM,KAAM,SAAQC,GAAI,EAAhE,CAAd;AACD,CAPM;AASP,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ;AAC7B,SAAOP,KAAK,CAAE,GAAEH,QAAS,UAASU,EAAG,EAAzB,CAAL,CAAiCC,IAAjC,CAAuCC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAA/C,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,SAAOb,KAAK,CAAE,GAAEH,QAAS,QAAb,EAAsB;AAChCiB,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFuB;AAKhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,QADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAL0B,GAAtB,CAAL,CASJL,IATI,CASEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATV,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMS,KAAK,GAAG,MAAM;AACzB,QAAMC,KAAK,GAAGxB,YAAY,EAA1B;AACA,SAAOI,KAAK,CAAE,GAAEH,QAAS,KAAb,EAAmB;AAC7BkB,IAAAA,OAAO,EAAE;AACPM,MAAAA,aAAa,EAAG,UAASD,KAAM;AADxB;AADoB,GAAnB,CAAL,CAIJZ,IAJI,CAIEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJV,CAAP;AAKD,CAPM;AASP,OAAO,MAAMY,OAAO,GAAG,CAACC,KAAD,EAAQP,IAAR,KAAiB;AACtC,QAAMI,KAAK,GAAGxB,YAAY,EAA1B;AACA,SAAOI,KAAK,CAAE,GAAEH,QAAS,QAAb,EAAsB;AAChCiB,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACPM,MAAAA,aAAa,EAAG,UAASD,KAAM,EADxB;AAEP,sBAAgB;AAFT,KAFuB;AAMhCJ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBF,MAAAA,IADmB;AAEnBO,MAAAA;AAFmB,KAAf;AAN0B,GAAtB,CAAL,CAUJf,IAVI,CAUEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVV,CAAP;AAWD,CAbM;AAeP,OAAO,MAAMc,QAAQ,GAAG,CAACC,QAAD,EAAWb,QAAX,EAAqBC,QAArB,KAAkC;AACxD,SAAOb,KAAK,CAAE,GAAEH,QAAS,WAAb,EAAyB;AACnCiB,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF0B;AAKnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,MAAAA,QAAQ,EAAEA,QADS;AAEnBb,MAAAA,QAAQ,EAAEA,QAFS;AAGnBC,MAAAA,QAAQ,EAAEA;AAHS,KAAf;AAL6B,GAAzB,CAAL,CAUJL,IAVI,CAUEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVV,CAAP;AAWD,CAZM","sourcesContent":["import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nconst sendAPI = (func) => {\n  return fetch(`${BASE_URL}/${func}`)\n}\n\nexport const getPosts = (page, itemPerPage) => {\n  let start = page * itemPerPage - itemPerPage;\n  let end = page * itemPerPage;\n  // return fetch(\n  //   `${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`\n  // );\n  return sendAPI(`/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`)\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      body,\n      title,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n"]},"metadata":{},"sourceType":"module"}