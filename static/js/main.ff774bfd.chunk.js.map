{"version":3,"sources":["utils.js","WebAPI.js","share/button/ButtonDefault.js","pages/RegisterPage/RegisterPage.js","contexts.js","pages/LoginPage/LoginPage.js","redux/loaderSlice.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","components/Header/Header.js","components/Footer/Footer.js","components/Loader/Loader.js","components/App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","page","itemPerPage","start","end","fetch","getMe","headers","authorization","then","res","json","Button","styled","button","ButtonDefault","ErrorMessage","div","RegisterPageWrapper","InputInfo","Input","input","RegisterPage","useState","nickname","setNickname","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","className","onSubmit","method","body","JSON","stringify","register","data","ok","message","push","value","onChange","e","target","AuthContext","createContext","LoginPageWrapper","LoginPage","setUser","useContext","login","response","toString","type","loaderSlice","createSlice","name","initialState","isOpen","reducers","toggleOpen","state","toggleOff","actions","selectLoader","loader","Root","PostContainer","PostTitle","Link","PostDate","PageSign","span","PageFunction","PostContent","SelfIntroduceBlock","Post","post","editTime","Date","createdAt","getMonth","getDate","getFullYear","to","id","title","HomePage","posts","setPosts","totalPage","setTotalPage","setPage","dispatch","useDispatch","handleLoader","useSelector","useEffect","Math","ceil","get","pageChanged","newSet","map","onClick","PostWrapper","toLocaleString","PostPage","setPost","useParams","getPost","NewPostPageWrapper","Info","User","Textarea","textarea","NewPostPage","user","setTitle","content","setContent","preventDefault","newPost","cols","rows","HeaderContainer","Brand","Block","props","$active","NavSection1","NavSection2","Header","location","useLocation","pathname","FooterContainer","Footer","Loading","Loader","animationData","loaderAnimation","SpaceDistrubution","Space","App","React","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","loaderReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ff774bfd.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page, itemPerPage) => {\n  let start = page * itemPerPage - itemPerPage;\n  let end = page * itemPerPage;\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      body,\n      title,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  border: 0;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  background: none;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 5px;\n  outline: none;\n  width:33%;\n  margin-top:20px;\n  box-shadow: 2px 2px 1px rgb(0 0 0 / 25%);\n  background: #e9e9e9;\n  color: rgba(0,0,0,0.7);\n  :active {\n    transform: translateY(2px);\n  }\n`;\n\nexport default function ButtonDefault() {\n    return (<Button>CONFIRM</Button>)\n}","import React, { useState } from \"react\";\nimport { register } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Register.scss\"\nimport ButtonDefault from \"../../share/button/ButtonDefault\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-top:50px;\n  text-transform:capitalize;\n`;\nconst RegisterPageWrapper = styled.div`\n  text-align: left;\n  margin-top: 20vh;\n  margin-bottom: 20vh;\n  max-width:50vw;\n  margin-right:auto;\n  margin-left:auto;\n`;\nconst InputInfo = styled.div`\n  margin-bottom: 10px;\n  letter-spacing: 3px;\n`;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n      } else if (data.ok === 1) {\n        history.push(\"/login\");\n      }\n    });\n  };\n\n  return (\n    <RegisterPageWrapper>\n      <div className=\"register__title\">Register</div>\n      <form onSubmit={handleSubmit}>\n        <InputInfo>\n          Nickname:\n          <Input\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n          />\n        </InputInfo>\n        <InputInfo>\n          Username:\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </InputInfo>\n        <InputInfo>\n          Password:\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </InputInfo>\n        <ButtonDefault></ButtonDefault>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </RegisterPageWrapper>\n  );\n}\n","import {createContext} from 'react'\n\nexport const AuthContext = createContext(null)\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport \"./Login.scss\"\nimport ButtonDefault from \"../../share/button/ButtonDefault\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-top:50px;\n  text-transform:capitalize;\n`;\n\nconst LoginPageWrapper = styled.div`\n  text-align: left;\n  margin-top: 20vh;\n  margin-bottom: 20vh;\n  max-width:50vw;\n  margin-right:auto;\n  margin-left:auto;\n`;\nconst InputInfo = styled.div`\n  margin-bottom: 10px;\n  letter-spacing: 3px;\n`;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null); // 有出錯，要順便把 token 清空\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageWrapper>\n      <div className=\"login__title\">Login</div>\n      <form onSubmit={handleSubmit}>\n        <InputInfo>\n          Username:\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </InputInfo>\n        <InputInfo>\n          Password:\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </InputInfo>\n        <ButtonDefault></ButtonDefault>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </LoginPageWrapper>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const loaderSlice = createSlice({\n    name: 'loader',\n    initialState: {\n        isOpen: false,\n    },\n    reducers: {\n        toggleOpen: state => {\n            if (!state.isOpen) { state.isOpen = true}\n        },\n        toggleOff: state => {\n            if (state.isOpen) { state.isOpen = false}\n        }\n    }\n})\n\nexport const { toggleOpen, toggleOff } = loaderSlice.actions\n\nexport default loaderSlice.reducer\n\nexport const selectLoader = state => state.loader.isOpen","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport \"./HomePage.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoader, toggleOpen, toggleOff } from \"../../redux/loaderSlice\";\n\nconst Root = styled.div`\n  text-align: center;\n  text-decoration: none;\n`;\n\nconst PostContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  margin: 10px auto;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  width: 50%;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 36px;\n  text-decoration: none;\n  color: black;\n  text-decoration: underline;\n  :hover { text-decoration-color: #f4bf2c; }\n  text-align: left;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  margin-bottom:50px;\n  text-align: left;\n`;\nconst PageSign = styled.div`\n  @media (max-width: 460px){\n    display: block;\n    margin: 10px 10px;\n  }\n  margin: 20px 20px;\n  display: inline-block;\n  padding: 10px;\n  color:#aaaaaa;\n`;\nconst Button = styled.span`\n  border: 0;\n  background: none;\n  cursor: pointer;\n  padding: 5px;\n  margin: 10px;\n  font-size: 11px;\n  color: #aaaaaa;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  :hover {\n    color:black;\n  }\n`;\nconst PageFunction = styled.div`\n  margin-top: 50px;\n  @media (max-width: 460px){\n    margin: 10px 10px;\n  }\n`;\n\n// const PostThumbnail = styled.div`\n//   width:60%;\n//   border:2px solid red;\n//   height:80vh;\n// `\n\nconst PostContent = styled.div`\n  margin-top: 20px;\n  height:100px;\n  width:100%;\n  overflow: hidden;\n  white-space: nowrap; \n  text-overflow: ellipsis;\n  word-break: break-all;\n`\n\nfunction SelfIntroduceBlock() {\n  return (\n    <div className=\"simpleIntroduce__container\">\n      <div className=\"simpleIntroduce__textContainer\">\n        <h1 className=\"simpleIntroduce__content\">A personal blog</h1>\n        <h1 className=\"simpleIntroduce__content-major\">Ri\n          <span className=\"simpleIntroduce__content-sub\">ck</span>\n          y's</h1>\n        <h3 className=\"simpleIntroduce__text\">I am a frontend developer Based in Taipei</h3>\n      </div>\n    </div>\n  )\n}\n\n\nfunction Post({ post }) {\n  const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n  const editTime = new Date(post.createdAt)\n  return (\n    <PostContainer>\n      {/* <PostThumbnail/> */}\n      <div className=\"post__desc\">\n        <PostDate>{months[editTime.getMonth()]}. {editTime.getDate()}, {editTime.getFullYear()}</PostDate>\n        <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n        <PostContent>{post.body}</PostContent>\n      </div>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [totalPage, setTotalPage] = useState();\n  const [page, setPage] = useState(1);\n  const itemPerPage = 5;\n  const dispatch = useDispatch()\n  const handleLoader = useSelector(selectLoader)\n\n  useEffect(() => {\n    getPosts(page, itemPerPage).then((post) =>\n      setTotalPage(Math.ceil(post.headers.get(\"X-Total-Count\") / itemPerPage))\n    );\n\n    dispatch(toggleOpen())\n    getPosts(page, itemPerPage)\n      .then((res) => res.json())\n      .then((posts) => {\n        dispatch(toggleOff())\n        setPosts(posts);\n      });\n  }, [page]);\n\n  const handleFirstPage = () => {\n    pageChanged(1, itemPerPage);\n  };\n\n  const handleLastPage = () => {\n    pageChanged(totalPage, itemPerPage);\n  };\n  const handlePreviousPage = () => {\n    if (page !== 1) {\n      pageChanged(page - 1, itemPerPage);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (page !== totalPage) {\n      pageChanged(page + 1, itemPerPage);\n    }\n  };\n\n  function pageChanged(newSet, itemPerPage) {\n    if (handleLoader) {\n      return;\n    }\n    setPage(newSet);\n    dispatch(toggleOpen())\n    getPosts(newSet, itemPerPage)\n      .then((res) => res.json())\n      .then((posts) => {\n        dispatch(toggleOff())\n        setPosts(posts);\n      });\n  }\n\n\n  return (\n    <Root>\n      <SelfIntroduceBlock/>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <PageFunction>\n        <Button onClick={handleFirstPage}>First</Button>\n        <Button onClick={handlePreviousPage}>Previous</Button>\n        <PageSign>\n          {page} / {totalPage}\n        </PageSign>\n        <Button onClick={handleNextPage}>Next</Button>\n        <Button onClick={handleLastPage}>Last</Button>\n      </PageFunction>\n    </Root>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getPost } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleOpen, toggleOff } from \"../../redux/loaderSlice\";\n\n\nconst PostTitle = styled.div`\n  font-size: 30px;\n`;\nconst PostDate = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nconst PostContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  width: 500px;\n  margin: auto auto;\n  padding: 20px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  word-break: break-word;\n`;\n\nconst PostWrapper = styled.div`\n  margin-top: 20vh ;\n  margin-bottom: 10vh ;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Post = ({ post }) => {\n  if (!post) return null;\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <div>{post.body}</div>\n    </PostContainer>\n  );\n};\n\nexport default function PostPage() {\n  const dispatch = useDispatch()\n  const [post, setPost] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(toggleOpen())\n    getPost(id).then((data) => {\n      setPost(data);\n      dispatch(toggleOff())\n    });\n  }, [id]);\n\n  return (\n    <PostWrapper>\n      <Post post={post} />\n    </PostWrapper>)\n}\n","import React, { useState, useContext } from \"react\";\nimport { newPost } from \"../../WebAPI\";\nimport { AuthContext } from \"../../contexts\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport ButtonDefault from \"../../share/button/ButtonDefault\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoader, toggleOpen, toggleOff } from \"../../redux/loaderSlice\";\n\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst NewPostPageWrapper = styled.div`\n  margin-top: 20vh;\n  font-size: 20px;\n  text-align: center;\n  /* border:2px solid red; */\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Info = styled.div`\n  margin: 0px auto;\n  letter-spacing: 3px;\n  text-align: left;\n  width:50%;\n  font-size: 16px;\n`;\nconst User = styled.div`\n  margin-bottom: 40px;\n  text-align: center;\n  width:100%;\n`;\nconst Textarea = styled.textarea`\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-align: left;\n  width:50%;\n`;\n\nexport default function NewPostPage() {\n  const { user } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const handleLoader = useSelector(selectLoader)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    dispatch(toggleOpen())\n    newPost(title, content).then((data) => {\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n      }\n      dispatch(toggleOff())\n      history.push(\"/\");\n    });\n  };\n  if (!user) {\n    return null;\n  }\n  return (\n    <NewPostPageWrapper>\n      <form onSubmit={handleSubmit}>\n        <User>嗨，{user.username}，有什麼話要告訴大家的嗎？</User>\n        <Info>Title:</Info>\n        <Textarea\n          cols=\"50\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <Info>Content:</Info>\n        <Textarea\n          rows=\"10\"\n          cols=\"50\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n        <ButtonDefault></ButtonDefault>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </NewPostPageWrapper>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  height: 10vh;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fff;\n  z-index:1;\n  `;\nconst Brand = styled.span`\n  font-size: 25px;\n  margin-left: 20px;\n  margin-right: 40px;\n  font-weight: 800;\n  text-transform: uppercase;\n  `;\nconst Block = styled(Link)`\n  @media (max-width: 600px) {\n    margin: 10px 10px;\n    font-size: 8px;\n  }\n  margin: 0px 20px;\n  text-decoration: none;\n  color: black;\n  cursor: pointer;\n  font-size: 11px;  \n  color: #aaaaaa;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  ${(props) =>\n    props.$active &&\n    `\n    color:black;\n    `}\n`;\n\nconst NavSection1 = styled.div`\n  @media (max-width: 700px) {\n      display: none;\n  }\n  display: flex;\n  align-items: center;\n  \n  `;\n\nconst NavSection2 = styled.div`\n  @media (max-width: 700px) {\n    justify-content: space-around;\n  }\n  display: flex;\n  justify-content: right;\n  width:100%;\n`;\n\nexport default function Header() {\n  const history = useHistory();\n  const location = useLocation(); //現在處於的 url\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(\"\");\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <NavSection1>\n        <Brand>Your first blog.</Brand>\n      </NavSection1>\n      <NavSection2>\n      <Block to=\"/\" $active={location.pathname === \"/\"}>\n        Home\n      </Block>\n      {/* <Block to=\"/aboutMe\" $active={location.pathname === \"/aboutMe\"}>\n        About\n      </Block> */}\n      {user && (\n      <Block to=\"/newPost\" $active={location.pathname === \"/newPost\"}>\n        post\n      </Block>\n      )}\n      <Block to=\"/register\" $active={location.pathname === \"/register\"}>\n        Register\n      </Block>\n      {!user && (\n      <Block to=\"/login\" $active={location.pathname === \"/login\"}>\n        Login\n      </Block>\n      )}\n      {user && (\n      <Block to=\"/login\" onClick={handleLogout}>\n        Logout\n      </Block>\n      )}\n      </NavSection2>\n    </HeaderContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 10vh;\n  background: #e9e9e9;\n  width: 100%;\n  text-align: center;\n  font-size: 14px;\n  letter-spacing: 3px;\n  color: #999999;\n`;\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      <div>Copyright © {new Date().getFullYear()}, Example Corporation</div>\n    </FooterContainer>\n  );\n}\n","import Lottie from \"lottie-react\";\nimport loaderAnimation from \"./loader.json\";\nimport styled from \"styled-components\";\nimport { Fragment } from 'react'\n\nconst Loading = styled.div`\n  z-index: 999;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function Loader() {\n\n    return (\n        <Fragment>\n            {<Loading>\n                <Lottie animationData={loaderAnimation}></Lottie>\n            </Loading>}\n        </Fragment>\n    )\n}","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getMe } from \"../WebAPI\";\nimport RegisterPage from \"../pages/RegisterPage\";\n// import AboutMePage from \"../pages/AboutMePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport HomePage from \"../pages/HomePage\";\nimport PostPage from \"../pages/PostPage\";\nimport NewPostPage from \"../pages/NewPostPage\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { AuthContext } from \"../contexts\";\nimport \"../App.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoader } from \"../redux/loaderSlice\";\nimport Loader from \"./Loader/Loader\";\n\nconst Root = styled.div`\n`;\nconst SpaceDistrubution = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width:100%;\n`;\nconst Space = styled.div`\n  min-height:90vh;\n`;\n\nfunction App() {\n  const [user, setUser] = React.useState(null);\n  const handleLoader = useSelector(selectLoader)\n \n  useEffect(() => {\n    getMe().then((response) => {\n      if (response.ok) {\n        setUser(response.data);\n      }\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <SpaceDistrubution>\n            {handleLoader && <Loader/>}\n            <Header />\n            <Space>\n              <Switch>\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route path=\"/post/:id\">\n                  <PostPage />\n                </Route>\n                {/* <Route exact path=\"/aboutMe\">\n                  <AboutMePage />\n                </Route> */}\n                <Route exact path=\"/newPost\">\n                  <NewPostPage />\n                </Route>\n                <Route path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n              </Switch>\n            </Space>\n            <Footer />\n          </SpaceDistrubution>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport loaderReducer from './loaderSlice'\n\nexport default configureStore({\n    reducer: {\n        loader: loaderReducer\n    }\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}